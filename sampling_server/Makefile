default: main

HERE := $(shell dirname $(realpath $(lastword $(MAKEFILE_LIST))))
ROOT := $(realpath $(HERE))
BUILD_DIR := $(ROOT)/build
INCLUDE_DIR := $(BUILD_DIR)/include
LIB_DIR := $(BUILD_DIR)/lib
BIN_DIR := $(BUILD_DIR)/bin

THIRD_PARTY_DIR := $(ROOT)/third_party
PYTHON_DIR := $(ROOT)/python
SRC_DIR = $(ROOT)/src
SSD_DRIVER_DIR := /home/zhzh/bam/src/linux


clean:
	@rm -rf $(BUILD_DIR)

################################## compiler #######################################

NVCXX := nvcc
NVCXXFLAGS := -std=c++17 -arch=sm_80 \
			  --extended-lambda -shared \
			  -Xcompiler -fPIC -lpthread \
			  --expt-relaxed-constexpr \
			  -I $(SRC_DIR)/include \
			  -I $(SRC_DIR)/cache \
			  -I $(SRC_DIR)/engine \
			  -I $(SRC_DIR)/storage \
			  -I $(SRC_DIR)/include/hashmap \
			  -I $(SSD_DRIVER_DIR)


CXX := g++
CXXFLAGS := -std=c++17 -fPIC -O2

################################## main ########################################### 
main: core
	@mkdir -p $(BUILD_DIR)/built
	@mkdir -p $(INCLUDE_DIR)
	@mkdir -p $(LIB_DIR)
	@mkdir -p $(BIN_DIR)
	@echo $(CORE_H)
	$(NVCXX) $(NVCXXFLAGS) -shared src/main.cpp  \
		-L /usr/local/cuda/lib64 \
		-lcudart \
		-o $(BIN_DIR)/legion


################################## core ########################################### 
CORE_DIR := $(SRC_DIR)
CORE_BUILT_DIR := $(BUILD_DIR)/built
CORE_DIRS := $(shell find "src" -maxdepth 3 -type d)
CORE_H := $(foreach dir,$(CORE_DIRS),$(wildcard $(dir)/*.h))
CORE_CU := $(foreach dir,$(CORE_DIRS),$(wildcard $(dir)/*.cu))
CORE_OBJ := $(addprefix $(CORE_BUILT_DIR)/,$(patsubst %.cu,%.o,$(CORE_CU)))

$(CORE_BUILT_DIR)/src/%.o:$(CORE_DIR)/%.cu $(CORE_H)
	@mkdir -p $(CORE_BUILT_DIR)
	@mkdir -p $(CORE_BUILT_DIR)/src
	$(NVCXX) $(NVCXXFLAGS) -c $< -o $@ 
	
$(CORE_BUILT_DIR)/src/cache/%.o:$(CORE_DIR)/cache/%.cu $(CORE_H)
	@mkdir -p $(CORE_BUILT_DIR)/src/cache
	@echo $<
	$(NVCXX) $(NVCXXFLAGS) -c $< -o $@

$(CORE_BUILT_DIR)/src/storage/%.o:$(CORE_DIR)/storage/%.cu $(CORE_H)
	@mkdir -p $(CORE_BUILT_DIR)/src/storage
	$(NVCXX) $(NVCXXFLAGS) -c $< -o $@

$(CORE_BUILT_DIR)/src/engine/%.o:$(CORE_DIR)/engine/%.cu $(CORE_H)
	@mkdir -p $(CORE_BUILT_DIR)/src/engine
	$(NVCXX) $(NVCXXFLAGS) -c $< -o $@

core: $(CORE_OBJ)

# cuda:
# 	g++ -shared -o libhelper_multiprocess.so helper_multiprocess.cpp -I . -fPIC	
# 	nvcc -o libgpu_kernel.so \
# 	-std=c++17 -arch=sm_80 \
# 	--extended-lambda -shared \
# 	-Xcompiler -fPIC -lpthread \
# 	--expt-relaxed-constexpr \
# 	-I ./include -I ./pcm/src \
# 	GPUCache.cu GPUMemoryPool.cu \
# 	Kernels.cu CUDA_IPC_Service.cu \
# 	GPU_Memory_Node_Storage.cu \
# 	GPU_Memory_Graph_Storage.cu \
# 	GPUGraphStore.cu Operator.cu \
# 	Server.cu\
# 	 -L . -lhelper_multiprocess  -L ./build/lib -lpcm

# main:
# 	g++ -I . main.cpp -fPIC -O2 \
# 	-L . -L /usr/local/cuda/lib64 \
# 	-lcudart  \
# 	-o legion \
# 	-lhelper_multiprocess -lgpu_kernel\
# 	 -I ./src -L ./build/lib -lpcm
